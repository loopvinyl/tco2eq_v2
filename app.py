def exibir_cotacao_carbono():
    """
    Exibe a cota√ß√£o do carbono com informa√ß√µes sobre o contrato atual
    """
    st.sidebar.header("üí∞ Mercado de Carbono e C√¢mbio")
    
    if not YFINANCE_AVAILABLE:
        st.sidebar.warning("‚ö†Ô∏è **yfinance n√£o instalado**")
        st.sidebar.info("Para cota√ß√µes em tempo real, execute:")
        st.sidebar.code("pip install yfinance")
    
    # Bot√£o para atualizar cota√ß√µes
    if st.sidebar.button("üîÑ Atualizar Cota√ß√µes"):
        st.session_state.cotacao_atualizada = True
        # Mostrar mensagem de atualiza√ß√£o
        st.sidebar.info("üîÑ Atualizando cota√ß√µes...")
        
        # For√ßar um rerun para processar as atualiza√ß√µes
        st.rerun()

    # Obt√©m informa√ß√µes do contrato atual
    ticker_atual, ano_contrato = obter_ticker_carbono_atual()
    
    if st.session_state.get('cotacao_atualizada', False):
        # Obter cota√ß√£o do carbono
        preco_carbono, moeda, contrato_info, sucesso_carbono = obter_cotacao_carbono()
        
        # Obter cota√ß√£o do Euro
        preco_euro, moeda_real, sucesso_euro = obter_cotacao_euro_real()
        
        # Mostrar resultados
        if sucesso_carbono:
            st.sidebar.success(f"**{contrato_info}**")
        else:
            st.sidebar.info(f"**{contrato_info}**")
        
        if sucesso_euro:
            st.sidebar.success(f"**EUR/BRL Atualizado**")
        else:
            st.sidebar.info(f"**EUR/BRL Refer√™ncia**")
        
        # Atualizar session state
        st.session_state.preco_carbono = preco_carbono
        st.session_state.moeda_carbono = moeda
        st.session_state.taxa_cambio = preco_euro
        st.session_state.moeda_real = moeda_real
        st.session_state.ano_contrato = ano_contrato
        
        # Resetar flag para evitar atualiza√ß√µes cont√≠nuas
        st.session_state.cotacao_atualizada = False
        
        # For√ßar outro rerun para mostrar os valores atualizados
        st.rerun()
    else:
        # Atualizar o ano_contrato se necess√°rio (para caso o ano tenha mudado)
        ticker_atual, ano_contrato_atual = obter_ticker_carbono_atual()
        if st.session_state.ano_contrato != ano_contrato_atual:
            st.session_state.ano_contrato = ano_contrato_atual

    # Exibe cota√ß√£o atual do carbono
    st.sidebar.metric(
        label=f"Carbon Dec {st.session_state.ano_contrato} (tCO‚ÇÇeq)",
        value=f"{st.session_state.moeda_carbono} {st.session_state.preco_carbono:.2f}",
        help=f"Contrato futuro com vencimento Dezembro {st.session_state.ano_contrato}"
    )
    
    # Exibe cota√ß√£o atual do Euro
    st.sidebar.metric(
        label="Euro (EUR/BRL)",
        value=f"{st.session_state.moeda_real} {st.session_state.taxa_cambio:.2f}",
        help="Cota√ß√£o do Euro em Reais Brasileiros"
    )
    
    # Calcular pre√ßo do carbono em Reais
    preco_carbono_reais = st.session_state.preco_carbono * st.session_state.taxa_cambio
    
    st.sidebar.metric(
        label=f"Carbon Dec {st.session_state.ano_contrato} (R$/tCO‚ÇÇeq)",
        value=f"R$ {preco_carbono_reais:.2f}",
        help="Pre√ßo do carbono convertido para Reais Brasileiros"
    )
    
    # Informa√ß√µes adicionais
    with st.sidebar.expander("üìÖ Sobre os Vencimentos e C√¢mbio"):
        st.markdown(f"""
        **Contrato Atual:** Dec {st.session_state.ano_contrato}
        **Ticker:** `{ticker_atual}`
        
        **C√¢mbio Atual:**
        - 1 Euro = R$ {st.session_state.taxa_cambio:.2f}
        - Carbon em Reais: R$ {preco_carbono_reais:.2f}/tCO‚ÇÇeq
        
        **Ciclo dos Contratos:**
        - Dez 2024 ‚Üí CO2Z24.NYB
        - Dez 2025 ‚Üí CO2Z25.NYB  
        - Dez 2026 ‚Üí CO2Z26.NYB
        - Dez 2027 ‚Üí CO2Z27.NYB
        
        **Migra√ß√£o Autom√°tica:**
        - A partir de Setembro: prepara para pr√≥ximo ano
        - O app ajusta automaticamente
        - Sem necessidade de atualiza√ß√£o manual
        """)
